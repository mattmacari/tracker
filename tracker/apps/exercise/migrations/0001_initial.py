# Generated by Django 2.1.8 on 2019-07-28 23:49

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], db_index=True, default='beginner', max_length=250)),
                ('name', models.TextField(db_index=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('type', models.CharField(choices=[('strength', 'Strength'), ('cardio', 'Cardio')], db_index=True, default='strength', max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExerciseEquipment',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MuscleGroup',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('muscle_name', models.TextField()),
                ('body_part', models.CharField(choices=[('upper', 'Upper'), ('lower', 'Lower')], default='upper', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutPlan',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('upcoming', 'upcoming'), ('inactive', 'inactive'), ('current', 'current'), ('past', 'past')], default='upcoming', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('notes', models.TextField()),
                ('assigned_user', models.ForeignKey(on_delete='cascade', related_name='assigned_workout_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('strength', 'Strength'), ('cardio', 'Cardio')], db_index=True, default='strength', max_length=250)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], db_index=True, default='beginner', max_length=250)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete='cascade', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workout',
            },
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ordering', models.IntegerField()),
                ('duration', models.DurationField(null=True)),
                ('exercise', models.ForeignKey(on_delete='cascade', related_name='workout_exercises', to='exercise.Exercise')),
                ('workout', models.ForeignKey(on_delete='cascade', related_name='workout_exercises', to='exercise.Workout')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutExerciseTarget',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('set_number', models.IntegerField()),
                ('min_reps', models.IntegerField()),
                ('max_reps', models.IntegerField()),
                ('to_failure', models.BooleanField()),
                ('rest_duration', models.IntegerField()),
                ('workout_exercise', models.ForeignKey(on_delete='cascade', related_name='targets', to='exercise.WorkoutExercise')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('plan_duration', models.DurationField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], db_index=True, default='beginner', max_length=250)),
                ('owner', models.ForeignKey(on_delete='cascade', related_name='owned_workout_plans', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutPlanWorkout',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('day_of_week', models.IntegerField(choices=[(1, 'Sunday'), (2, 'Monday'), (3, 'Tuesday'), (4, 'Wednesday'), (5, 'Thursday'), (6, 'Friday'), (7, 'Saturday')])),
                ('workout', models.ForeignKey(on_delete='cascade', to='exercise.Workout')),
                ('workout_plan', models.ForeignKey(on_delete='cascade', related_name='workouts', to='exercise.WorkoutPlan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='userworkoutplan',
            name='workout_plan',
            field=models.ForeignKey(on_delete='cascade', to='exercise.WorkoutPlan'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='exercise_equipment',
            field=models.ForeignKey(on_delete='cascade', related_name='exercises', to='exercise.ExerciseEquipment'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='muscle',
            field=models.ForeignKey(on_delete='cascade', related_name='exercises', to='exercise.MuscleGroup'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
